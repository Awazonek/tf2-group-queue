package globals

import "github.com/awazonek/tf2-group-queue/internal/types"

var AllRegions = []string{
	"us-east",
	"us-west",
	"us-central",
	"eu",
	"au",
	"sa",
}

var DefaultMaps = []string{
	"cp_altitude",
	"cp_badlands",
	"cp_granary",
	"cp_well",
	"cp_steel",
	"cp_egypt_final",
	"cp_gorge",
	"cp_foundry",
	"cp_freight_final1",
	"cp_mountainlab",
	"cp_manor_event",
	"cp_degrootkeep",
	"cp_powerhouse",
	"cp_snowplow",
	"cp_gullywash_final1",
	"cp_mossrock",
	"cp_overgrown",
	"koth_viaduct",
	"koth_sawmill",
	"koth_harvest_final",
	"koth_lakeside_final",
	"koth_nucleus",
	"koth_king",
	"koth_bagel_event",
	"koth_probed",
	"koth_cascade",
	"pl_goldrush",
	"pl_badwater",
	"pl_thundermountain",
	"pl_upward",
	"pl_barnblitz",
	"pl_frontier_final",
	"pl_hoodoo_final",
	"pl_snowycoast",
	"pl_borneo",
	"pl_swiftwater_final1",
	"sd_doomsday",
	"pd_carnival_of_carnage",
	"pd_watergate",
	"pd_astroheim",
	"pl_breadspace",
}

var AllMaps = []string{
	"cp_altitude",
	"cp_badlands",
	"cp_dustbowl",
	"cp_granary",
	"cp_well",
	"cp_steel",
	"cp_egypt_final",
	"cp_gorge",
	"cp_foundry",
	"cp_freight_final1",
	"cp_mountainlab",
	"cp_manor_event",
	"cp_degrootkeep",
	"cp_powerhouse",
	"cp_snowplow",
	"cp_gullywash_final1",
	"cp_mossrock",
	"cp_overgrown",
	"ctf_2fort",
	"ctf_turbine",
	"ctf_well",
	"ctf_doublecross",
	"ctf_sawmill",
	"ctf_landfall",
	"ctf_foundry",
	"koth_viaduct",
	"koth_sawmill",
	"koth_harvest_final",
	"koth_lakeside_final",
	"koth_nucleus",
	"koth_king",
	"koth_bagel_event",
	"koth_probed",
	"koth_cascade",
	"pl_goldrush",
	"pl_badwater",
	"pl_thundermountain",
	"pl_upward",
	"pl_barnblitz",
	"pl_frontier_final",
	"pl_hoodoo_final",
	"plr_hightower",
	"plr_nightfall_final",
	"plr_pipeline",
	"plr_bananabay",
	"pl_snowycoast",
	"pl_borneo",
	"pl_swiftwater_final1",
	"mvm_mannhattan",
	"mvm_rotternburg",
	"mvm_bigrock",
	"mvm_decoy",
	"mvm_coaltown",
	"mvm_ghost_town",
	"tc_hydro",
	"arena_lumberyard",
	"arena_badlands",
	"arena_granary",
	"arena_ravine",
	"arena_watchtower",
	"arena_offblast_final",
	"sd_doomsday",
	"pd_carnival_of_carnage",
	"pd_watergate",
	"pd_astroheim",
	"rd_asteroid",
	"pass_brickyard",
	"pass_warehouse",
	"pl_breadspace",
}

var AllGameModes = []types.GameMode{
	types.Unknown,
	types.Payload,
	types.CaptureTheFlag,
	types.ControlPoint,
	types.KingOfTheHill,
	types.AttackDefend,
	types.PayloadRace,
	types.PlayerDestruction,
	types.Other,
}

func GetMaxedOutGroup() types.UserGroupData {
	return types.UserGroupData{
		ID: "Metadata",
		Parameters: types.ServerParameters{
			Regions:    AllRegions,
			Maps:       AllMaps,
			MinPlayers: 0,
			MaxPlayers: 32,
			CustomRules: types.CustomRules{
				DisableThousandUncles: true,
				UnknownMapGameModes:   AllGameModes,
			},
			MinSpaceAvailable: 0,
		},
		Searching: false,
	}
}
